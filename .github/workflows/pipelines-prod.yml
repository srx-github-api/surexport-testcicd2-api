name: Build and deploy to PROD

on:
  pull_request:
    branches: [ main ]
    
jobs:
  build-prod:
    runs-on: ubuntu-latest
    if: github.base_ref == 'main' && startsWith(github.head_ref, 'merge/') && endsWith(github.head_ref, '_prod')
    environment: PROD
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 8
    - name: Build with Maven
      env:
        MULE_CLIENT_ID: ${{ secrets.mule_client_id }}
        MULE_CLIENT_SECRET: ${{ secrets.mule_client_secret }}
        REPOSITORY_NAME: ${{ vars.repository_name }}
      run: |
        chmod +x src/main/resources/scripts/maven-configure.sh 
        ./src/main/resources/scripts/maven-configure.sh \
         --repository-name=$REPOSITORY_NAME \
         --client-id=$MULE_CLIENT_ID \
         --client-secret=$MULE_CLIENT_SECRET
        mvn -B package --file pom.xml -DskipMunitTests -DattachMuleSources
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    - name: Upload artifact 
      uses: actions/upload-artifact@v3
      with:
          name: artifacts
          path: target/*.jar

  deploy-prod:
    needs: build-prod
    runs-on: ubuntu-latest
    if: github.base_ref == 'main' && startsWith(github.head_ref, 'merge/') && endsWith(github.head_ref, '_main')
    environment: PROD
    steps:    
    - name: Checkout this repo
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@v3
      with:
        name: artifacts
    - name: Deploy app asset to Exchange
      run: |
        mvn clean deploy || true
    - name: Deploy to Sandbox
      env:
        MULE_CLIENT_ID: ${{ secrets.mule_client_id }}
        MULE_CLIENT_SECRET: ${{ secrets.mule_client_secret }}
        MULE_APP_NAME: ${{ vars.application_name }}
        MULE_TARGET_NAME: ${{ vars.target_name }}
        MULE_SERVER_ID: ${{ vars.repository_name }}
        REPOSITORY_NAME: ${{ vars.repository_name }}
        MULE_ENVIRONMENT: ${{ vars.environment }}
        MULE_REPLICAS: ${{ vars.replicas }}
        MULE_VCORES: ${{ vars.vcores }}
        ENCRYPT_KEY: ${{ secrets.encrypt_key }}
      run: |
        chmod +x src/main/resources/scripts/maven-application-deploy2.sh 
        ./src/main/resources/scripts/maven-application-deploy2.sh \
         --client-id=$MULE_CLIENT_ID \
         --client-secret=$MULE_CLIENT_SECRET \
         --application-name=$MULE_APP_NAME \
         --target-name=$MULE_TARGET_NAME \
         --server-id=$REPOSITORY_NAME \
         --environment=$MULE_ENVIRONMENT \
         --replicas=$MULE_REPLICAS \
         --vcores=$MULE_VCORES \
         --env=prod \
         --encrypt-key=$ENCRYPT_KEY
